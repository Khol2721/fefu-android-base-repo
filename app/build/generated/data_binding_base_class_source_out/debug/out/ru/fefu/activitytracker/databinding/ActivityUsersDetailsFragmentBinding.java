// Generated by view binder compiler. Do not edit!
package ru.fefu.activitytracker.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import ru.fefu.activitytracker.R;

public final class ActivityUsersDetailsFragmentBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView textUserDate;

  @NonNull
  public final TextView textUserDistance;

  @NonNull
  public final TextView textUserFinishTime;

  @NonNull
  public final TextView textUserName;

  @NonNull
  public final TextView textUserStartTime;

  @NonNull
  public final TextView textUserTime;

  @NonNull
  public final Toolbar toolbarUser;

  private ActivityUsersDetailsFragmentBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextView textUserDate, @NonNull TextView textUserDistance,
      @NonNull TextView textUserFinishTime, @NonNull TextView textUserName,
      @NonNull TextView textUserStartTime, @NonNull TextView textUserTime,
      @NonNull Toolbar toolbarUser) {
    this.rootView = rootView;
    this.textUserDate = textUserDate;
    this.textUserDistance = textUserDistance;
    this.textUserFinishTime = textUserFinishTime;
    this.textUserName = textUserName;
    this.textUserStartTime = textUserStartTime;
    this.textUserTime = textUserTime;
    this.toolbarUser = toolbarUser;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityUsersDetailsFragmentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityUsersDetailsFragmentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_users_details_fragment, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityUsersDetailsFragmentBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.textUserDate;
      TextView textUserDate = ViewBindings.findChildViewById(rootView, id);
      if (textUserDate == null) {
        break missingId;
      }

      id = R.id.textUserDistance;
      TextView textUserDistance = ViewBindings.findChildViewById(rootView, id);
      if (textUserDistance == null) {
        break missingId;
      }

      id = R.id.textUserFinishTime;
      TextView textUserFinishTime = ViewBindings.findChildViewById(rootView, id);
      if (textUserFinishTime == null) {
        break missingId;
      }

      id = R.id.textUserName;
      TextView textUserName = ViewBindings.findChildViewById(rootView, id);
      if (textUserName == null) {
        break missingId;
      }

      id = R.id.textUserStartTime;
      TextView textUserStartTime = ViewBindings.findChildViewById(rootView, id);
      if (textUserStartTime == null) {
        break missingId;
      }

      id = R.id.textUserTime;
      TextView textUserTime = ViewBindings.findChildViewById(rootView, id);
      if (textUserTime == null) {
        break missingId;
      }

      id = R.id.toolbarUser;
      Toolbar toolbarUser = ViewBindings.findChildViewById(rootView, id);
      if (toolbarUser == null) {
        break missingId;
      }

      return new ActivityUsersDetailsFragmentBinding((ConstraintLayout) rootView, textUserDate,
          textUserDistance, textUserFinishTime, textUserName, textUserStartTime, textUserTime,
          toolbarUser);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
