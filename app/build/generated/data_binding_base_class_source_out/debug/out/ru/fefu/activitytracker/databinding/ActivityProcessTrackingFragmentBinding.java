// Generated by view binder compiler. Do not edit!
package ru.fefu.activitytracker.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import ru.fefu.activitytracker.R;

public final class ActivityProcessTrackingFragmentBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final FloatingActionButton buttonFinish;

  @NonNull
  public final FloatingActionButton buttonPause;

  @NonNull
  public final LinearLayout linearLayout;

  @NonNull
  public final TextView textProcessActivities;

  @NonNull
  public final TextView textProcessDistance;

  @NonNull
  public final TextView textProcessTime;

  private ActivityProcessTrackingFragmentBinding(@NonNull ConstraintLayout rootView,
      @NonNull FloatingActionButton buttonFinish, @NonNull FloatingActionButton buttonPause,
      @NonNull LinearLayout linearLayout, @NonNull TextView textProcessActivities,
      @NonNull TextView textProcessDistance, @NonNull TextView textProcessTime) {
    this.rootView = rootView;
    this.buttonFinish = buttonFinish;
    this.buttonPause = buttonPause;
    this.linearLayout = linearLayout;
    this.textProcessActivities = textProcessActivities;
    this.textProcessDistance = textProcessDistance;
    this.textProcessTime = textProcessTime;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityProcessTrackingFragmentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityProcessTrackingFragmentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_process_tracking_fragment, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityProcessTrackingFragmentBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button_finish;
      FloatingActionButton buttonFinish = ViewBindings.findChildViewById(rootView, id);
      if (buttonFinish == null) {
        break missingId;
      }

      id = R.id.button_pause;
      FloatingActionButton buttonPause = ViewBindings.findChildViewById(rootView, id);
      if (buttonPause == null) {
        break missingId;
      }

      id = R.id.linearLayout;
      LinearLayout linearLayout = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout == null) {
        break missingId;
      }

      id = R.id.text_process_activities;
      TextView textProcessActivities = ViewBindings.findChildViewById(rootView, id);
      if (textProcessActivities == null) {
        break missingId;
      }

      id = R.id.text_process_distance;
      TextView textProcessDistance = ViewBindings.findChildViewById(rootView, id);
      if (textProcessDistance == null) {
        break missingId;
      }

      id = R.id.text_process_time;
      TextView textProcessTime = ViewBindings.findChildViewById(rootView, id);
      if (textProcessTime == null) {
        break missingId;
      }

      return new ActivityProcessTrackingFragmentBinding((ConstraintLayout) rootView, buttonFinish,
          buttonPause, linearLayout, textProcessActivities, textProcessDistance, textProcessTime);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
